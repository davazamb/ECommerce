@model ECommerce.Models.AddProductView



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!--Valida el mensaje de error para el cuadro de dialogo de addproduct-->
                @Html.DropDownList("ProductId", null, ((IList<System.Web.Mvc.ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = true, @oninvalid = "setCustomValidity('Minimum length is 6 characters')", @oninput = "setCustomValidity('')"})
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @required = "true", @oninvalid = "setCustomValidity('Mensaje acá')", @oninput = "setCustomValidity('')" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("Create" , "Orders")" class="btn btn-info"><i class="fa fa-backward"></i> Regresar</a>|
                <input type="submit" value="->-Agregar-<-" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


