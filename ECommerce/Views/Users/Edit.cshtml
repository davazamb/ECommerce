@model ECommerce.Models.User

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-offset-1 col-md-5">
            <div class="form-horizontal">
                <div class="col-md-offset-1 col-md-2">

                            @if (!string.IsNullOrEmpty(Model.Photo))
                {
                                <img src="@Url.Content(Model.Photo)" class="media-object dp img-circle" alt="Image" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                            }
                </div>
                <h4 style="color:sandybrown">@Html.DisplayFor(modelItem => Model.FullName)</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId)

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhotoFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="file-input-new">
                            <div class="input-group" style="width:280px">
                                <div tabindex="500" class="form-control file-caption">
                                    <div class="file-caption-name" id="NombreArchivo">
                                    </div>
                                </div>
                                <div class="input-group-btn" style="height:auto">
                                    <div tabindex="500" class="btn btn-primary btn-file">
                                        <i class="glyphicon glyphicon-folder-open"></i>
                                        Buscar...
                                        @Html.TextBoxFor(modelo => modelo.PhotoFile, new { type = "file", id = "files" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                    <hr />

                </div>
        </div>

        <br />
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-offset-1 col-md-4">
                    <dl>
                        <dt>
                            @if (!string.IsNullOrEmpty(Model.Company.Logo))
                {
                                <img src="@Url.Content(Model.Company.Logo)"  alt="Image" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                            }
                        </dt>
                    </dl>
                </div>
            </div>
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartamentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DepartamentId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartamentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-8">
                        <a href="@Url.Action("Index" , "Users")" class="btn btn-warning"><i class="fa fa-backward"></i> Regresar</a>|
                        <input type="submit" value="->-Editar-<-" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
        var Url = '@Url.Action("GetCities", "Generic")';
        </script>
}
